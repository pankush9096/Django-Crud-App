from django.shortcuts import render
from django.http import HttpResponse
from django.shortcuts import redirect
from . import forms
from .models import Employee

# Create your views here.
# CRUD Operations

# Create
def emp(request):

    if request.method=='POST':
        form= forms.EmployeeForm(request.POST)
        if form.is_valid():
            try:
                form.save()
                return redirect('show')
            except:
                print("Error Saving")

    else:
        form= forms.EmployeeForm # this form will be injected into html file
    return render(request, 'emp.html', {'form': form})
    # giving template tag to pass form variable attributes to template tag which is key in dictionary {'form' : form}

# Read Operations

def show(request):
    employees= Employee.objects.all() # Using orm to extract all data from employee model
    return render(request, 'show.html', {'employees':employees})

#Delete Operations
def destroy(request,id): # id is the django autogenerated primary key it does for all the models we create and is not visible on admin
    employee= Employee.objects.get(id=id) # is to get the record who has matching id coming from request.
    employee.delete() # delete the record of matching id
    return redirect('show')

# Edit and Update Operations

def edit(request,id):
    employee=Employee.objects.get(id=id)
    return render(request,'edit.html',{'employee':employee})


def update(request,id):
    employee=Employee.objects.get(id=id)
    employee.delete() # this will delete the old values
    form = forms.EmployeeForm(request.POST) # it will have new values coming from post method of form in edit.html.
    if form.is_valid():
        form.save()
        return redirect('show')
    return render(request,'edit.html',{'employee':employee})